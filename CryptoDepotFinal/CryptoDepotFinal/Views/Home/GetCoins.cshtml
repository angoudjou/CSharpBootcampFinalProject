
@{
    ViewBag.Title = "GetCoins";
    int j = 0;
}
@model IEnumerable<CryptoDepotFinal.Models.Coin>

<h2>List of all Currencies</h2>
<p>
    Search by Currency
    <form action="GetCoins" method="post">
        <input type="search" name="Name" value=@ViewBag.Name >
        <input type="submit" value="Search" />
</p>
</form>
<!--//   -->
<table class=" table table-striped table-hover table-bordered">
    <tr>
        <th>
            Btc

        </th>
        <th>
            Name

        </th>
        <th>
            ticker

        </th>
        <th>
            Rank

        </th>
        <th>
            usd

        </th>
        <th>
            History

        </th>
        <th>
            Forcast

        </th>
    </tr>

    @foreach (var act in Model.OrderBy(c => int.Parse(c.rank)))
    {
        <tr>
            <td>
                @Html.DisplayFor(itemmodel => act.btc)
            </td>
            <td>
                @Html.DisplayFor(itemmodel => act.name)
            </td>
            <td>
                @Html.DisplayFor(itemmodel => act.ticker)
            </td>
            <td>
                @Html.DisplayFor(itemmodel => act.rank)
            </td>
            <td>
                @Html.DisplayFor(itemmodel => act.usd)
            </td>

            <td>
                @Html.ActionLink("History", "GetCoinHistory", new { coin = act.ticker }, "Home")

            </td>
            <td>
                @Html.ActionLink("Forecast", "GetCoinForecast", new { coin = act.ticker }, "Home")

            </td>
        </tr>
    }
</table>

<!-- pagination-->
<ul class="pagination pagination-lg">
    @for (int i = 1; i < ViewBag.Number; i= i + ViewBag.NberPerPage)
    {
        j = i / ViewBag.NberPerPage +1;
    <il class="page-item">@Html.ActionLink(""+@j,"GetCoins", "Home", new {page = @j, name =ViewBag.Name }, new { @class ="page-link"})  </il>
    }

</ul>

